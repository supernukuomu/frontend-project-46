import _ from"lodash";

const makeString=e=>_.isObject(e)?"[complex value]":`'${e}'`,getPlain=e=>{const a=(e,r)=>{return e.map(e=>{var t=`${r}${e.key}`;return"deleted"===e.type?`Property '${t}' was removed`:"added"===e.type?`Property '${t}' was added with value: ${makeString(e.newValue)}`:"changed"===e.type?`Property '${t}' was updated. From ${makeString(e.oldValue)} to ${makeString(e.newValue)}`:"nested"===e.type?a(e.children,`${t}.`):null}).filter(e=>null!=e).join("\n")};return a(e,"")};export default getPlain;import _ from"lodash";const makeString=e=>_.isObject(e)?"[complex value]":`'${e}'`,getPlain=e=>{const a=(e,r)=>{return e.map(e=>{var t=`${r}${e.key}`;return"deleted"===e.type?`Property '${t}' was removed`:"added"===e.type?`Property '${t}' was added with value: ${makeString(e.newValue)}`:"changed"===e.type?`Property '${t}' was updated. From ${makeString(e.oldValue)} to ${makeString(e.newValue)}`:"nested"===e.type?a(e.children,`${t}.`):null}).filter(e=>null!=e).join("\n")};return a(e,"")};export default getPlain;